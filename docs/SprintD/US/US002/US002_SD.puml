@startuml
autonumber
'hide footbox
actor "Receptionist" as Rec
participant ":VaccineScheduleUI" as UI
participant ":ReceptionistVaccineScheduleController" as CTRL
participant ":App" as APP
participant ":Company" as COMP
participant "store: UserStore" as SU
participant "store: VaccinationTypeStore" as SVT
participant ": VaccineTypeMapper" as MVT
participant "store: VaccinationCenterStore" as SVC
participant ": VaccinationCenterMapper" as MVC
participant ":VaccinationCenter" as VC
participant "store: VaccineScheduleStore" as SVS
participant ": VaccineScheduleMapper" as MVS
participant "dto: VaccineScheduleDto" as DtoVS
participant "vs: VaccineSchedule" as VS


activate Rec


Rec -> UI : asks to schedule a vaccination
activate UI
UI -> CTRL ** : ReceptionistVaccineScheduleController()
activate CTRL
CTRL -> APP : app = getInstance()
activate APP
deactivate APP
CTRL -> COMP : vaccineTypeStore = getVaccineTypeStore()
activate COMP
deactivate COMP
CTRL -> COMP : vaccinationCenterStore = getVaccinationCenterStore()
activate COMP
deactivate COMP
CTRL -> COMP : userStore = getUserStoreStore()
activate COMP
deactivate COMP
deactivate CTRL

UI --> Rec : requests data (snsNumber)
deactivate UI




Rec -> UI : types requested data
activate UI
UI -> CTRL : checkForUser(snsNumber)
activate CTRL
CTRL -> SU : checkForUser(snsNumber)
activate SU
deactivate SU
deactivate CTRL


UI -> CTRL : vaccineTypeListDto = getVaccineTypeList()
activate CTRL
CTRL -> SVT : vaccineTypeList = getVaccineTypeList()
activate SVT
deactivate SVT
CTRL -> MVT :toDTO(vaccineTypeList)
note right : This method is represented in "US001_SD_VaccineTypeListToDTO"
activate MVT
UI --> Rec : shows vaccine type list
deactivate MVT
deactivate SVT
deactivate CTRL
deactivate UI


Rec -> UI : selects vaccine type
activate UI
UI -> CTRL : obtainVaccineType(index)
activate CTRL
CTRL -> SVT : vaccineType = getVaccineTypeFromStore(index)
activate SVT
deactivate SVT
deactivate CTRL



UI -> CTRL: vaccinationCenterListDto = getVaccinationCenterList()
activate CTRL
alt if checkIfOngoingOutbreakIsTheChosenVaccineType(vaccineType) is false
CTRL -> SVC : vaccinationCenterList = getHealthcareCentersList()
activate SVC
deactivate SVC
else
CTRL -> SVC : vaccinationCenterList = getAllVaccinationCentersList()
activate SVC
deactivate SVC
end
CTRL -> MVC : toDTO(vaccinationCenterList)
note right : This method is represented in "US001_SD_VaccinationCentersListToDTO"
activate MVC
deactivate MVC
UI --> Rec : shows vaccination center list
deactivate UI
deactivate CTRL



Rec -> UI : selects vaccination center
activate UI
UI -> CTRL : obtainVaccinationCenter()
activate CTRL
CTRL -> VC : vc = getVaccinationCenterFromStore(index, checkIfOngoingOutbreakIsTheChosenVaccineType(vaccineType))
activate VC
deactivate VC
deactivate CTRL
UI --> Rec : requests data (date, time)
deactivate UI
Rec -> UI : types requested data
activate UI



UI -> CTRL : createVaccineSchedule(snsNumber,date,time)
activate CTRL
CTRL -> DtoVS ** : scheduleDTO = createDTO(snsNumber,vt,date,time)
deactivate APP
CTRL -> VC : vaccineScheduleStore = getVaccineScheduleStore()
activate VC
deactivate VC
deactivate COMP
CTRL -> SVS : VaccineSchedule = createVaccineSchedule(scheduleDTO)
deactivate CTRL
activate SVS
SVS -> MVS : toModel(scheduleDTO)
activate MVS


MVS -> DtoVS : snsNumber = getSnsNumber()
activate DtoVS
deactivate DtoVS
MVS -> DtoVS : vaccineType = getVaccineType()
activate DtoVS
deactivate DtoVS
MVS -> DtoVS : date = getDate()
activate DtoVS
deactivate DtoVS
MVS -> DtoVS : time = getTime()
activate DtoVS
deactivate DtoVS
MVS -> VS **  : create(snsNumber, vaccineType, date, time)
deactivate MVS
deactivate MVS
deactivate SVC
deactivate SVS
deactivate VC

deactivate CTRL



UI -> CTRL : validateVaccineSchedule()
activate CTRL

CTRL -> SVC : checkForDuplicateSchedules(vaccineSchedule)
activate SVC
deactivate SVC
CTRL -> SVS : checkForMaxSchedulesQuantity(vaccineSchedule)
activate SVS
deactivate SVS
CTRL -> SVS : checkForSchedulesAtSameTime(vaccineSchedule)
activate SVS
deactivate SVS
CTRL -> SVS : checkForSchedulesOutOfCenterWorkingHours(vaccineSchedule)
activate SVS
deactivate SVS
CTRL -> SVS: checkForSchedulesBeforeNow(vaccineSchedule)
activate SVS
deactivate SVS
deactivate CTRL
deactivate CTRL
UI -> CTRL : getScheduleInfo()
activate CTRL
deactivate CTRL
UI --> Rec : shows all data and requests confirmation

|||



deactivate CTRL
deactivate UI
Rec -> UI : confirms the data
activate UI
UI -> CTRL : saveVaccineSchedule()
activate CTRL
CTRL -> SVS : addVaccineSchedule(vaccineSchedule)
activate SVS
deactivate SVS




deactivate CTRL
UI --> Rec : Informs operation success and asks \n if the user wishes to receive an \n SMS message with information about \n the scheduled appointment.
deactivate UI

Rec --> UI : chooses option
activate UI
UI --> Rec : informs operation success
deactivate UI


deactivate Rec
@enduml